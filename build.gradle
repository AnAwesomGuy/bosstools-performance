plugins {
    id 'idea'
    id 'net.minecraftforge.gradle' version '6.0.20'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'org.spongepowered.mixin' version '0.7-SNAPSHOT'
}

version = mod_version
group = mod_group_id

base {
    archivesName = mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

minecraft {
    mappings channel: 'parchment', version: "2022.03.06-$minecraft_version"
    copyIdeResources = true

    runs {
        configureEach {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '-mixin.config=bosstools_performance.mixins.json'
            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        client {
        }

        clientMixinDebug {
            parent runs.client
            property 'mixin.debug.export', 'true'
        }

        server {
            args '--nogui'
        }

        serverMixinDebug {
            parent runs.server
            property 'mixin.debug.export', 'true'
        }
    }
}

repositories {
    maven {
        url 'https://cursemaven.com'
        content {
            includeGroup 'curse.maven'
        }
    }

    maven {
        url 'https://maven.blamejared.com'
        content {
            includeGroup 'org.embeddedt'
        }
    }

    maven {
        url "https://jitpack.io"
        content {
            includeGroup 'com.github.bawnorton.mixinsquared'
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:$minecraft_version-$forge_version"
    implementation fg.deobf('curse.maven:beyond-earth-377448:3581611')
    implementation(jarJar annotationProcessor("com.github.bawnorton.mixinsquared:mixinsquared-common:0.1.2-beta.3")) {
        jarJar.ranged(it, "[0.1.2-beta.3,)")
    }
    implementation fg.deobf('curse.maven:modernfix-790626:5157663') // mixin extras (also for performance)
    annotationProcessor 'org.spongepowered:mixin:0.8.4:processor'

    // these are for testing purposes
    runtimeOnly fg.deobf('curse.maven:spark-361579:3767277')
    runtimeOnly fg.deobf('curse.maven:shutup-experimental-settings-407174:3188120')
    runtimeOnly fg.deobf("org.embeddedt:embeddium-$minecraft_version:0.3.7-git.114f034+mc$minecraft_version")
}

import groovy.json.JsonSlurper
import groovy.json.JsonOutput

processResources {
    var replaceProperties = [
            minecraft_version: minecraft_version, forge_version: forge_version,
            mod_id: mod_id, mod_version: mod_version, mod_authors: mod_authors
    ]
    inputs.properties replaceProperties

    filesMatching(['pack.mcmeta', 'META-INF/mods.toml']) {
        expand replaceProperties + [project: project]
        filter {
            it.empty ? null : it
        }
    }

    // minify jsons
    doLast {
        fileTree(dir: outputs.files.asPath, include: '@(**/*.json|pack.mcmeta)').each {
            it.text = JsonOutput.toJson(new JsonSlurper().parse(it))
        }
    }
}

jar {
    manifest {
        attributes([
                'Specification-Title'     : mod_id,
                'Specification-Vendor'    : mod_authors,
                'Specification-Version'   : '1',
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : mod_authors,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'Mixin-Configs'           : 'bosstools-performace.mixins.json'
        ])
    }

    finalizedBy 'reobfJar'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
